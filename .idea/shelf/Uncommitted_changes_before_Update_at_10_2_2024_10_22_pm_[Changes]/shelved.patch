Index: __init__.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>import mailbox\r\nimport bcrypt as Bcrypt\r\nfrom flask import Flask, render_template, request, redirect, url_for\r\nfrom flask_login import LoginManager\r\nfrom flask_sqlalchemy import SQLAlchemy\r\nfrom main import *\r\nimport os, shelve, Response, eventManagement\r\nfrom Forms import CreateCheckoutForm, CreateUpdateForm, CreateProductForm, CreateReviewForm, CreateEventForm, \\\r\n    CheckInForm\r\nimport Review, Cart, Store, Product\r\n\r\napp = Flask(__name__)\r\n\r\n\r\ndef create_app():\r\n    # app = Flask(__name__)\r\n    app.config['SECRET_KEY'] = '9OLWxND4o83j4K4iuopO'\r\n    app.config['SQLALCHEMY_DATABASE_URI'] = \"sqlite:///database.db\"\r\n\r\n    db.init_app(app)\r\n\r\n    with app.app_context():\r\n        db.create_all()\r\n\r\n        login_manager = LoginManager()\r\n        login_manager.login_view = 'auth.login'\r\n        login_manager.init_app(app)\r\n\r\n        from models import User\r\n\r\n        @login_manager.user_loader\r\n        def load_user(user_id):\r\n            return db.session.get(User, user_id)\r\n\r\n        from auth import auth as auth_blueprint\r\n        app.register_blueprint(auth_blueprint)\r\n\r\n        from main import main as main_blueprint\r\n        app.register_blueprint(main_blueprint)\r\n\r\n        from admin import admin as admin_blueprint\r\n        app.register_blueprint(admin_blueprint)\r\n\r\n    app.run(debug=True, port=8000)\r\n\r\n\r\nclass Product:\r\n    count_id = 0\r\n\r\n    def __init__(self, name, price, image):\r\n        Product.count_id += 1\r\n        self.name = name\r\n        self.price = price\r\n        self.image = image\r\n\r\n\r\nclass Store:\r\n    def __init__(self):\r\n        self.products = shelve.open('products.db', writeback=True)\r\n\r\n    def add_product(self, product):\r\n        self.products[product.name] = product\r\n\r\n    def get_product(self, name):\r\n        print(self.products.get(name))\r\n        return self.products.get(name)\r\n\r\n    def get_all_products(self):\r\n        return list(self.products.values())\r\n\r\n    def close(self):\r\n        self.products.close()\r\n\r\n\r\nclass Cart:\r\n    def __init__(self):\r\n        self.carts = shelve.open('carts.db', writeback=True)\r\n        self.items = {}\r\n\r\n    def save_cart(self, id):\r\n        self.carts[id] = self.items\r\n\r\n    def get_cart(self):\r\n        return self.carts['1']\r\n\r\n    def add_item(self, id, product):\r\n        if '1' in self.carts:\r\n            items = self.carts[id]\r\n            if product.name in items:\r\n                items[product.name]['quantity'] += 1\r\n            else:\r\n                items[product.name] = {'product': product, 'quantity': 1}\r\n            print(items)\r\n            self.carts[id] = items\r\n        else:\r\n            self.items[product.name] = {'product': product, 'quantity': 1}\r\n            self.carts[id] = self.items\r\n\r\n    def remove_item(self, id, product):\r\n        items = self.carts[id]\r\n        if product.name in items:\r\n            if items[product.name]['quantity'] > 1:\r\n                items[product.name]['quantity'] -= 1\r\n            else:\r\n                del items[product.name]\r\n        self.carts[id] = items\r\n\r\n    def get_items(self):\r\n        return list(self.items.values())\r\n\r\n    def clear(self):\r\n        self.items = {}\r\n\r\n    def close(self):\r\n        self.carts.close()\r\n\r\n\r\n@app.route('/store')\r\ndef store_page():\r\n    store = Store()\r\n    product = Product(\"tomato seed\", 99999999, '../static/img/tomato seed.jpeg')\r\n    store.add_product(product)\r\n    product = Product(\"potato seed\", 9999, '../static/img/potato seed.jpg')\r\n    store.add_product(product)\r\n    products = store.get_all_products()\r\n    store.close()\r\n    reviews_dict = {}\r\n    db = shelve.open('review.db', 'r')\r\n    reviews_dict = db['Reviews']\r\n    db.close()\r\n    reviews_list = []\r\n    for key in reviews_dict:\r\n        review = reviews_dict.get(key)\r\n        reviews_list.append(review)\r\n\r\n    return render_template('store.html', products=products, count=len(reviews_list), reviews_list=reviews_list)\r\n\r\n\r\n@app.route('/add_to_cart', methods=['POST'])\r\ndef add_to_cart():\r\n    store = Store()\r\n    cart = Cart()\r\n    product_name = request.form['product_name']\r\n    product = store.get_product(product_name)\r\n    cart.add_item('1', product)\r\n    store.close()\r\n    cart.close()\r\n    return redirect(url_for('cart_page'))\r\n\r\n\r\n@app.route('/cart')\r\ndef cart_page():\r\n    cart = Cart()\r\n    items = list(cart.get_cart().values())\r\n\r\n    # Calculate total price\r\n    total_price = sum(item['product'].price * item['quantity'] for item in items)\r\n\r\n    print(items)\r\n    cart.close()\r\n\r\n    return render_template('cart.html', items=items, total_price=total_price)\r\n\r\n\r\n@app.route('/remove_from_cart', methods=['POST'])\r\ndef remove_from_cart():\r\n    product_name = request.form['product_name']\r\n\r\n    store = Store()\r\n    cart = Cart()\r\n    print(store.get_all_products())\r\n    product = store.get_product(product_name)\r\n    cart.get_cart()\r\n    cart.remove_item('1', product)\r\n    store.close()\r\n    cart.close()\r\n    return redirect(url_for('cart_page'))\r\n\r\n\r\n@app.route('/createReview', methods=['GET', 'POST'])\r\ndef create_review():\r\n    create_review_form = CreateReviewForm(request.form)\r\n\r\n    if request.method == 'POST' and create_review_form.validate():\r\n        reviews_dict = {}\r\n        db = shelve.open('review.db', 'c')\r\n\r\n        try:\r\n            reviews_dict = db['Reviews']\r\n        except:\r\n            print(\"Error in retrieving Reviews from review.db.\")\r\n\r\n        review = Review.Review(create_review_form.customer_name.data, create_review_form.product_name.data,\r\n                               create_review_form.rating.data, create_review_form.email.data,\r\n                               create_review_form.review_date.data, create_review_form.comments.data)\r\n        reviews_dict[review.get_review_id()] = review\r\n        db['Reviews'] = reviews_dict\r\n\r\n        db.close()\r\n\r\n        return redirect(url_for('retrieve_reviews'))\r\n\r\n    return render_template('createReview.html', form=create_review_form)\r\n\r\n\r\n@app.route('/retrieveReviews')\r\ndef retrieve_reviews():\r\n    reviews_dict = {}\r\n    db = shelve.open('review.db', 'r')\r\n    reviews_dict = db['Reviews']\r\n    db.close()\r\n    reviews_list = []\r\n    for key in reviews_dict:\r\n        review = reviews_dict.get(key)\r\n        reviews_list.append(review)\r\n\r\n    return render_template('retrieveReviews.html', count=len(reviews_list), reviews_list=reviews_list)\r\n\r\n\r\n@app.route('/updateReview/<int:id>/', methods=['GET', 'POST'])\r\ndef update_review(id):\r\n    update_review_form = CreateReviewForm(request.form)\r\n\r\n    if request.method == 'POST' and update_review_form.validate():\r\n        reviews_dict = {}\r\n        db = shelve.open('review.db', 'w')\r\n        reviews_dict = db['Reviews']\r\n\r\n        review = reviews_dict.get(id)\r\n        review.set_customer_name(update_review_form.customer_name.data)\r\n        review.set_product_name(update_review_form.product_name.data)\r\n        review.set_rating(update_review_form.rating.data)\r\n        review.set_email(update_review_form.email.data)\r\n        review.set_review_date(update_review_form.review_date.data)\r\n        review.set_comments(update_review_form.comments.data)\r\n\r\n        db['Reviews'] = reviews_dict\r\n        db.close()\r\n\r\n        return redirect(url_for('retrieve_reviews'))\r\n    else:\r\n        reviews_dict = {}\r\n        db = shelve.open('review.db', 'r')\r\n        reviews_dict = db['Reviews']\r\n        db.close()\r\n\r\n        review = reviews_dict.get(id)\r\n        update_review_form.customer_name.data = review.get_customer_name()\r\n        update_review_form.product_name.data = review.get_product_name()\r\n        update_review_form.rating.data = review.get_rating()\r\n        update_review_form.email.data = review.get_email()\r\n        update_review_form.review_date.data = review.get_review_date()\r\n        update_review_form.comments.data = review.get_comments()\r\n\r\n        return render_template('updateReview.html', form=update_review_form)\r\n\r\n\r\n@app.route('/deleteReview/<int:id>', methods=['POST'])\r\ndef delete_review(id):\r\n    reviews_dict = {}\r\n    db = shelve.open('review.db', 'w')\r\n    reviews_dict = db.get('Reviews', {})\r\n\r\n    reviews_dict.pop(id)\r\n\r\n    db['Reviews'] = reviews_dict\r\n\r\n    db.close()\r\n\r\n    return redirect(url_for('retrieve_reviews'))\r\n\r\n\r\n@app.route('/review')\r\ndef reply_review():\r\n    reviews_dict = {}\r\n    db = shelve.open('review.db', 'r')\r\n    reviews_dict = db['Reviews']\r\n    db.close()\r\n    reviews_list = []\r\n    for key in reviews_dict:\r\n        review = reviews_dict.get(key)\r\n        reviews_list.append(review)\r\n\r\n    return render_template('productmanagement.html', count=len(reviews_list), reviews_list=reviews_list)\r\n\r\n\r\n# Event management - Admin\r\n@app.route('/createEvents', methods=['GET', 'POST'])\r\ndef create_events():\r\n    create_event_form = CreateEventForm(request.form)\r\n\r\n    if request.method == 'POST' and create_event_form.validate():\r\n\r\n        eventManagement_dict = {}\r\n        db = shelve.open('eventManagement.db', 'c')\r\n\r\n        try:\r\n            eventManagement_dict = db['Events']\r\n        except:\r\n            print(\"Error in retrieving Events from eventManagement.db.\")\r\n\r\n        event = eventManagement.eventManagement(create_event_form.name.data, create_event_form.date.data,\r\n                                                create_event_form.timing.data, create_event_form.location.data,\r\n                                                create_event_form.description.data,\r\n                                                create_event_form.budget.data, create_event_form.collaborators.data,\r\n                                                create_event_form.person_in_charge.data)\r\n        eventManagement_dict[event.get_event_id()] = event\r\n        db['Events'] = eventManagement_dict\r\n\r\n        db.close()\r\n\r\n        return redirect(url_for('retrieve_events'))\r\n    return render_template('createEvents.html', form=create_event_form, )\r\n\r\n\r\n@app.route('/retrieveEvents')\r\ndef retrieve_events():\r\n    eventManagement_dict = {}\r\n    try:\r\n        db = shelve.open('eventManagement.db', 'r')\r\n        if 'Events' in db:\r\n            eventManagement_dict = db['Events']\r\n        else:\r\n            db['Events'] = eventManagement_dict\r\n        db.close()\r\n    except:\r\n        print(\"eventManagement.db not found\")\r\n\r\n    events_list = []\r\n    for key in eventManagement_dict:\r\n        events = eventManagement_dict.get(key)\r\n        events_list.append(events)\r\n\r\n    return render_template('retrieveEvents.html', count=len(events_list), events_list=events_list)\r\n\r\n\r\n@app.route('/updateEvents/<int:id>/', methods=['GET', 'POST'])\r\ndef update_events(id):\r\n    update_event_form = CreateEventForm(request.form)\r\n    if request.method == 'POST' and update_event_form.validate():\r\n        eventManagement_dict = {}\r\n        db = shelve.open('eventManagement.db', 'w')\r\n        eventManagement_dict = db['Events']\r\n\r\n        event = eventManagement_dict.get(id)\r\n        event.set_name(update_event_form.name.data)\r\n        event.set_date(update_event_form.date.data)\r\n        event.set_timing(update_event_form.timing.data)\r\n        event.set_location(update_event_form.location.data)\r\n        event.set_description(update_event_form.description.data)\r\n        event.set_budget(update_event_form.budget.data)\r\n        event.set_person_in_charge(update_event_form.person_in_charge.data)\r\n        event.set_collaborators(update_event_form.collaborators.data)\r\n\r\n        db['Events'] = eventManagement_dict\r\n        db.close()\r\n\r\n        return redirect(url_for('retrieve_events'))\r\n    else:\r\n        eventManagement_dict = {}\r\n        db = shelve.open('eventManagement.db', 'r')\r\n        eventManagement_dict = db['Events']\r\n        db.close()\r\n\r\n        event = eventManagement_dict.get(id)\r\n        update_event_form.name.data = event.get_name()\r\n        update_event_form.date.data = event.get_date()\r\n        update_event_form.timing.data = event.get_timing()\r\n        update_event_form.location.data = event.get_location()\r\n        update_event_form.description.data = event.get_description()\r\n        update_event_form.budget.data = event.get_budget()\r\n        update_event_form.person_in_charge.data = event.get_person_in_charge()\r\n        update_event_form.collaborators.data = event.get_collaborators()\r\n\r\n        return render_template('updateEvents.html', form=update_event_form)\r\n\r\n\r\n@app.route('/deleteEvent/<int:id>', methods=['POST'])\r\ndef delete_event(id):\r\n    eventManagement = {}\r\n    db = shelve.open('eventManagement.db', 'w')\r\n    eventManagement_dict = db['Events']\r\n\r\n    eventManagement_dict.pop(id)\r\n\r\n    db['Events'] = eventManagement_dict\r\n    db.close()\r\n\r\n    return redirect(url_for('retrieve_events'))\r\n\r\n\r\n# Events- User side\r\n\r\n@app.route('/retrieveDiscoverEvents')\r\ndef retrieveDiscoverEvents():\r\n    return render_template('retrieveDiscoverEvents.html')\r\n\r\n\r\n@app.route('/retrieveUserEvents', methods=['GET', 'POST'])\r\ndef retrieveUserEvents():\r\n    check_in_form = CheckInForm(request.form)\r\n    check_in_form.validate()\r\n    return render_template('retrieveUserEvents.html', form=check_in_form)\r\n\r\n\r\n@app.route('/donation')\r\n# get method to get donation page\r\ndef donation():\r\n    return render_template(\"donation.html\")\r\n\r\n\r\n@app.route('/success')\r\ndef success():\r\n    return render_template(\"success.html\")\r\n\r\n\r\n@app.route('/checkout', methods=['GET', 'POST'])\r\n# accepts both get and post methods, checkout page is retrieved\r\n# when form is received, data will be posted onto the server\r\ndef response():\r\n    # Retrieve the 'amount' parameter\r\n    amount = request.args.get('amount')\r\n    create_checkout_form = CreateCheckoutForm(request.form)  # class object, calls server and passes in request\r\n    default_amount = amount\r\n    # Set the default value for amount\r\n    create_checkout_form.amount.data = default_amount\r\n\r\n    if request.method == 'POST' and create_checkout_form.validate():\r\n        responses_dict = {}\r\n        db = shelve.open('response.db', 'c')\r\n\r\n        try:\r\n            responses_dict = db['Responses']\r\n        except:\r\n            print(\"Error in retrieving Responses from response.db.\")\r\n\r\n        response = Response.Response(create_checkout_form.fname.data, create_checkout_form.lname.data,\r\n                                     create_checkout_form.phone.data, create_checkout_form.email.data,\r\n                                     create_checkout_form.add1.data, create_checkout_form.add2.data,\r\n                                     create_checkout_form.pcode.data, create_checkout_form.dmethod.data,\r\n                                     create_checkout_form.amount.data)\r\n        responses_dict[response.get_response_id()] = response\r\n\r\n        db['Responses'] = responses_dict\r\n\r\n        db.close()\r\n\r\n        return redirect(url_for('success'))\r\n\r\n    return render_template('checkout.html', form=create_checkout_form, customAmount=amount)\r\n\r\n\r\n@app.route('/responseManagement')\r\ndef response_management():\r\n    responses_dict = {}\r\n    db = shelve.open('response.db', 'r')\r\n    responses_dict = db['Responses']\r\n    db.close()\r\n\r\n    responses_list = []\r\n    for key in responses_dict:\r\n        response = responses_dict.get(key)\r\n        responses_list.append(response)\r\n\r\n    return render_template('responseManagement.html', count=len(responses_list), responses_list=responses_list)\r\n\r\n\r\n@app.route('/updateResponse/<int:id>/', methods=['GET', 'POST'])\r\ndef update_response(id):\r\n    update_checkout_form = CreateUpdateForm(request.form)\r\n    if request.method == 'POST' and update_checkout_form.validate():\r\n        responses_dict = {}\r\n        db = shelve.open('response.db', 'w')\r\n        responses_dict = db['Responses']\r\n\r\n        response = responses_dict.get(id)\r\n        response.set_fname(update_checkout_form.fname.data)\r\n        response.set_lname(update_checkout_form.lname.data)\r\n        response.set_phone(update_checkout_form.phone.data)\r\n        response.set_email(update_checkout_form.email.data)\r\n        response.set_add1(update_checkout_form.add1.data)\r\n        response.set_add2(update_checkout_form.add2.data)\r\n        response.set_pcode(update_checkout_form.pcode.data)\r\n        response.set_dmethod(update_checkout_form.dmethod.data)\r\n\r\n        db['Responses'] = responses_dict\r\n        db.close()\r\n\r\n        return redirect(url_for('response_management'))\r\n    else:\r\n        responses_dict = {}\r\n        db = shelve.open('response.db', 'r')\r\n        responses_dict = db['Responses']\r\n        db.close()\r\n\r\n        response = responses_dict.get(id)\r\n        update_checkout_form.fname.data = response.get_fname()\r\n        update_checkout_form.lname.data = response.get_lname()\r\n        update_checkout_form.phone.data = response.get_phone()\r\n        update_checkout_form.email.data = response.get_email()\r\n        update_checkout_form.add1.data = response.get_add1()\r\n        update_checkout_form.add2.data = response.get_add2()\r\n        update_checkout_form.pcode.data = response.get_pcode()\r\n        update_checkout_form.dmethod.data = response.get_dmethod()\r\n\r\n    return render_template('updateResponse.html', form=update_checkout_form)\r\n\r\n\r\n@app.route('/deleteResponse/<int:id>', methods=['POST'])\r\ndef delete_response(id):\r\n    responses_dict = {}\r\n    db = shelve.open('response.db', 'w')\r\n    responses_dict = db['Responses']\r\n\r\n    responses_dict.pop(id)\r\n\r\n    db['Responses'] = responses_dict\r\n    db.close()\r\n\r\n    return redirect(url_for('response_management'))\r\n\r\n\r\n@app.route('/createProduct', methods=['GET', 'POST'])\r\n# accepts both get and post methods, createProduct page is retrieved\r\n# when form is received, data will be posted onto the server\r\ndef create_product():\r\n    create_product_form = CreateProductForm(request.form)  # class object, calls server and passes in request\r\n    if request.method == 'POST' and create_product_form.validate():\r\n        products_dict = {}\r\n        db = shelve.open('product.db', 'c')\r\n\r\n        try:\r\n            products_dict = db['Products']\r\n        except:\r\n            print(\"Error in retrieving Products from product.db.\")\r\n\r\n        product = Product.Product(create_product_form.name.data, create_product_form.price.data,\r\n                                  create_product_form.description.data, create_product_form.tags.data)\r\n        products_dict[product.get_product_id()] = product\r\n        db['Products'] = products_dict\r\n\r\n        db.close()\r\n\r\n        return redirect(url_for('product_management'))\r\n    return render_template('createProduct.html', form=create_product_form)\r\n\r\n\r\n@app.route('/productManagement')\r\ndef product_management():\r\n    products_dict = {}\r\n    db = shelve.open('product.db', 'r')\r\n    products_dict = db['Products']\r\n    db.close()\r\n\r\n    products_list = []\r\n    for key in products_dict:\r\n        product = products_dict.get(key)\r\n        products_list.append(product)\r\n\r\n    return render_template('productManagement.html', count=len(products_list), products_list=products_list)\r\n\r\n\r\n@app.route('/updateProduct/<int:id>/', methods=['GET', 'POST'])\r\ndef update_product(id):\r\n    update_product_form = CreateProductForm(request.form)\r\n    if request.method == 'POST' and update_product_form.validate():\r\n        products_dict = {}\r\n        db = shelve.open('product.db', 'w')\r\n        products_dict = db['Products']\r\n\r\n        product = products_dict.get(id)\r\n        product.set_name(update_product_form.name.data)\r\n        product.set_price(update_product_form.price.data)\r\n        product.set_description(update_product_form.description.data)\r\n        product.set_tags(update_product_form.tags.data)\r\n\r\n        db['Products'] = products_dict\r\n        db.close()\r\n\r\n        return redirect(url_for('product_management'))\r\n    else:\r\n        products_dict = {}\r\n        db = shelve.open('product.db', 'r')\r\n        products_dict = db['Products']\r\n        db.close()\r\n\r\n        product = products_dict.get(id)\r\n        update_product_form.name.data = product.get_name()\r\n        update_product_form.price.data = product.get_price()\r\n        update_product_form.description.data = product.get_description()\r\n        update_product_form.tags.data = product.get_tags()\r\n\r\n        return render_template('updateProduct.html', form=update_product_form)\r\n\r\n\r\n@app.route('/deleteProduct/<int:id>', methods=['POST'])\r\ndef delete_product(id):\r\n    products_dict = {}\r\n    db = shelve.open('product.db', 'w')\r\n    products_dict = db['Products']\r\n\r\n    products_dict.pop(id)\r\n\r\n    db['Products'] = products_dict\r\n    db.close()\r\n\r\n    return redirect(url_for('product_management'))\r\n\r\n\r\nif __name__ == '__main__':\r\n    create_app()\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/__init__.py b/__init__.py
--- a/__init__.py	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/__init__.py	(date 1707511618629)
@@ -5,9 +5,8 @@
 from flask_sqlalchemy import SQLAlchemy
 from main import *
 import os, shelve, Response, eventManagement
-from Forms import CreateCheckoutForm, CreateUpdateForm, CreateProductForm, CreateReviewForm, CreateEventForm, \
-    CheckInForm
-import Review, Cart, Store, Product
+from Forms import CreateCheckoutForm, CreateUpdateForm, CreateProductForm, CreateReviewForm, CreateEventForm, CheckInForm, CreateReplyForm
+import Review, Cart, Store, Product, Reply
 
 app = Flask(__name__)
 
@@ -270,18 +269,104 @@
     return redirect(url_for('retrieve_reviews'))
 
 
+
 @app.route('/review')
 def reply_review():
-    reviews_dict = {}
-    db = shelve.open('review.db', 'r')
-    reviews_dict = db['Reviews']
-    db.close()
-    reviews_list = []
-    for key in reviews_dict:
-        review = reviews_dict.get(key)
-        reviews_list.append(review)
+     reviews_dict = {}
+     db = shelve.open('review.db', 'r')
+     reviews_dict = db['Reviews']
+     db.close()
+     reviews_list = []
+     for key in reviews_dict:
+       review = reviews_dict.get(key)
+       reviews_list.append(review)
 
-    return render_template('productmanagement.html', count=len(reviews_list), reviews_list=reviews_list)
+     return render_template('productmanagement.html', count=len(reviews_list), reviews_list=reviews_list)
+@app.route('/createReply', methods=['GET', 'POST'])
+def create_reply():
+    create_reply_form = CreateReplyForm(request.form)
+
+    if request.method == 'POST' and create_reply_form.validate():
+        replys_dict = {}
+        db = shelve.open('reply.db', 'c')
+
+        try:
+            replys_dict = db['Replys']
+        except:
+            print("Error in retrieving Replies from reply.db.")
+
+        reply = Reply.Reply(create_reply_form.customer_name.data, create_reply_form.product_name.data,create_reply_form.email.data,
+                               create_reply_form.reply_date.data, create_reply_form.comments.data)
+        replys_dict[reply.get_reply_id()] = reply
+        db['Replys'] = replys_dict
+
+        db.close()
+
+        return redirect(url_for('view_replys'))
+
+    return render_template('createReply.html', form=create_reply_form)
+
+@app.route('/viewReplys')
+def view_replys():
+    reviews_dict = {}
+    db = shelve.open('reply.db', 'r')
+    replys_dict = db['Replys']
+    db.close()
+    replys_list = []
+    for key in replys_dict:
+       reply = replys_dict.get(key)
+       replys_list.append(reply)
+
+    return render_template('viewReplys.html', count=len(replys_list), replys_list=replys_list)
+
+@app.route('/updateReply/<int:id>/', methods=['GET', 'POST'])
+def update_reply(id):
+    update_reply_form = CreateReplyForm(request.form)
+
+    if request.method == 'POST' and update_reply_form.validate():
+        replys_dict = {}
+        db = shelve.open('reply.db', 'w')
+        replys_dict = db['Replys']
+
+        reply = replys_dict.get(id)
+        reply.set_customer_name(update_reply_form.customer_name.data)
+        reply.set_product_name(update_reply_form.product_name.data)
+        reply.set_email(update_reply_form.email.data)
+        reply.set_reply_date(update_reply_form.reply_date.data)
+        reply.set_comments(update_reply_form.comments.data)
+
+        db['Replys'] = replys_dict
+        db.close()
+
+        return redirect(url_for('view_replys'))
+    else:
+        replys_dict = {}
+        db = shelve.open('reply.db', 'r')
+        replys_dict = db['Replys']
+        db.close()
+
+        reply = replys_dict.get(id)
+        update_reply_form.customer_name.data = reply.get_customer_name()
+        update_reply_form.product_name.data = reply.get_product_name()
+        update_reply_form.email.data = reply.get_email()
+        update_reply_form.reply_date.data = reply.get_reply_date()
+        update_reply_form.comments.data = reply.get_comments()
+
+        return render_template('updateReply.html', form=update_reply_form)
+
+@app.route('/deleteReply/<int:id>', methods=['POST'])
+def delete_reply(id):
+    replys_dict = {}
+    db = shelve.open('reply.db', 'w')
+    reviews_dict = db.get('Replys', {})
+
+    reviews_dict.pop(id)
+
+    db['Replys'] = replys_dict
+
+    db.close()
+
+    return redirect(url_for('view_replys'))
 
 
 # Event management - Admin
Index: Forms.py
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>from wtforms import (Form, StringField, RadioField, SelectField, TextAreaField, validators, PasswordField, IntegerField,\r\n                     FloatField, DateField)\r\nfrom wtforms.fields import TimeField, IntegerField\r\nfrom wtforms.fields import DateField\r\nfrom wtforms.fields.html5 import EmailField\r\nfrom wtforms.validators import DataRequired, Length, ValidationError\r\n\r\n\r\nclass CreateCompanyForm(Form):\r\n    company_name = StringField('Company Name', [validators.Length(min=1, max=150), validators.DataRequired()])\r\n    email = EmailField('Email', [validators.Length(min=1, max=150), validators.DataRequired()])\r\n    date_joined = DateField('Date Joined', format='%Y-%m-%d')\r\n    address = StringField('Address', [validators.length(max=200), validators.DataRequired()])\r\n    password = PasswordField('Password', [validators.Optional()])\r\n\r\n\r\n# Admin side (Events)\r\nclass CreateReviewForm(Form):\r\n    customer_name = StringField('Customer Name', [validators.Length(min=1, max=150), validators.DataRequired(),\r\n                                                  validators.Regexp(r'^[A-Za-z ]*$',\r\n                                                                    message=\"Please enter only letters.\")])\r\n    product_name = SelectField('Product Name',\r\n                               choices=[('', 'Select'), ('Tomato Seed', 'Tomato Seed'), ('Potato Seed', 'Potato Seed')],\r\n                               default='', validators=[validators.InputRequired()])\r\n    rating = IntegerField('Rating', [validators.NumberRange(min=1, max=5), validators.DataRequired()])\r\n    email = EmailField('Email', [validators.Email(), validators.DataRequired()])\r\n    review_date = DateField('Review Date', format='%Y-%m-%d')\r\n    comments = TextAreaField('Comments', [validators.Length(min=1, max=500), validators.DataRequired()])\r\n\r\n\r\n# User side (Events)\r\nclass CheckInForm(Form):\r\n    name = StringField('Name: ', [validators.DataRequired(message=\"Please enter your full name\")],\r\n                       render_kw={\"placeholder\": \"Eg. Angeline Tan\"})\r\n    email = EmailField('Email: ', [validators.DataRequired(message=\"Please enter your email address\")],\r\n                       render_kw={\"placeholder\": \"Eg. angelinetan123@gmail.com\"})\r\n\r\n    def validate_name(self, name):\r\n        excluded_chars = \"*?!'^+%&/()=}][{$#1234567890\"\r\n        for char in name.data:\r\n            if char in excluded_chars:\r\n                raise ValidationError('Name can only contain alphabets')\r\n\r\n    def validate_email(self, email):\r\n        excluded_chars = \"*?!'^+%&/()={}[]$#\"\r\n        for char in email.data:\r\n            if char in excluded_chars:\r\n                raise ValidationError(\"Invalid Email\")\r\n\r\n\r\nclass CreateCheckoutForm(Form):\r\n    amount = IntegerField('You are donating a total of', render_kw={\"readonly\": True})\r\n\r\n    fname = StringField('First Name', [validators.DataRequired()])\r\n\r\n    lname = StringField('Last Name', [validators.DataRequired()])\r\n\r\n    phone = StringField('Phone Number', [validators.Length(min=8, max=8), DataRequired()],\r\n                        render_kw={\"placeholder\": \"8 Digit Phone Number\"})\r\n\r\n    email = EmailField('Email Address', [validators.DataRequired()], render_kw={\"placeholder\": \"Example@gmail.com\"})\r\n\r\n    add1 = StringField('Address Line 1', [validators.DataRequired()],\r\n                       render_kw={\"placeholder\": \"Street\"})\r\n\r\n    add2 = StringField('Address Line 2', [validators.DataRequired()],\r\n                       render_kw={\"placeholder\": \"Block & Unit Number\"})\r\n\r\n    pcode = StringField('Postal Code', [validators.Length(min=6, max=6), DataRequired()],\r\n                        render_kw={\"placeholder\": \"6 Digit Postal Code\"})\r\n\r\n    dmethod = RadioField('Delivery Method', [validators.DataRequired()],\r\n                         choices=[('S', 'Standard (2-8 Business days)'), ('E', 'Express (1 Business day)')],\r\n                         default='Select')\r\n\r\n    cname = StringField('Full Name on Card', [validators.DataRequired()])\r\n\r\n    cnum = StringField('Card Number', [validators.Length(min=16, max=16), DataRequired()],\r\n                       render_kw={\"placeholder\": \"XXXX XXXX XXXX XXXX\"})\r\n\r\n    edate = DateField('Expiry Date', [validators.DataRequired()])\r\n\r\n    cvc = StringField('CVC', [validators.Length(min=3, max=3), DataRequired()],\r\n                      render_kw={\"placeholder\": \"3 Digit CVC\"})\r\n\r\n\r\nclass CreateUpdateForm(Form):\r\n    fname = StringField('First Name', [validators.DataRequired()])\r\n\r\n    lname = StringField('Last Name', [validators.DataRequired()])\r\n\r\n    phone = StringField('Phone Number', [validators.Length(min=8, max=8), DataRequired()],\r\n                        render_kw={\"placeholder\": \"8 Digit Phone Number\"})\r\n\r\n    email = EmailField('Email Address', [validators.DataRequired()], render_kw={\"placeholder\": \"Example@gmail.com\"})\r\n\r\n    add1 = StringField('Address Line 1', [validators.DataRequired()],\r\n                       render_kw={\"placeholder\": \"Street\"})\r\n\r\n    add2 = StringField('Address Line 2', [validators.DataRequired()],\r\n                       render_kw={\"placeholder\": \"Block & Unit Number\"})\r\n\r\n    pcode = StringField('Postal Code', [validators.Length(min=6, max=6), DataRequired()],\r\n                        render_kw={\"placeholder\": \"6 Digit Postal Code\"})\r\n\r\n    dmethod = RadioField('Delivery Method', [validators.DataRequired()],\r\n                         choices=[('S', 'Standard (2-8 Business days)'), ('E', 'Express (1 Business day)')],\r\n                         default='Select')\r\n\r\n\r\nclass CreateProductForm(Form):\r\n    name = StringField('Name', [validators.DataRequired()])\r\n\r\n    price = FloatField('Price', [validators.DataRequired()])\r\n\r\n    description = TextAreaField('Description', [validators.DataRequired()],\r\n                                render_kw={\"placeholder\": \"Describe the product...\"})\r\n    tags = RadioField('Type', [validators.DataRequired()], choices=[('S', 'Seed'), ('F', 'Fertiliser')],\r\n                      default='Select')\r\n\r\n\r\nclass CreateEventForm(Form):\r\n    name = StringField('Name: ', [validators.DataRequired()])\r\n    timing = TimeField('Timing: ', [validators.DataRequired()])\r\n    location = StringField('Location: ', [validators.DataRequired()])\r\n    date = DateField('Date: ', [validators.DataRequired()])\r\n    description = TextAreaField('Description: ', [validators.Optional()])\r\n    person_in_charge = StringField(\"Person-In-Charge: \")\r\n    budget = IntegerField(\"Budget($): \", [validators.NumberRange(min=0)])\r\n    collaborators = StringField(\"Collaborators: \")\r\n\r\n    def validate_name(self, name):\r\n        excluded_chars = \"*?!'^+%&/()=}][{$#1234567890\"\r\n        for char in name.data:\r\n            if char in excluded_chars:\r\n                raise ValidationError('Event name can only contain alphabets')\r\n\r\n    def validate_collaborators(self, collaborators):\r\n        excluded_chars = \"*?!'^+%&/()=}][{$#\"\r\n        for char in collaborators.data:\r\n            if char in excluded_chars:\r\n                raise ValidationError('Collaborators can only contain alphanumeric values')\r\n\r\n    def validate_person_in_charge(self, person_in_charge):\r\n        excluded_chars = \"*?!'^+%&/()=}][{$#\"\r\n        for char in person_in_charge.data:\r\n            if char in excluded_chars:\r\n                raise ValidationError('Person-In-Charge must only contain alphanumeric values')\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/Forms.py b/Forms.py
--- a/Forms.py	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/Forms.py	(date 1707511618648)
@@ -146,3 +146,11 @@
         for char in person_in_charge.data:
             if char in excluded_chars:
                 raise ValidationError('Person-In-Charge must only contain alphanumeric values')
+
+
+class CreateReplyForm(Form):
+    customer_name = StringField('Customer Name', [validators.Length(min=1, max=150), validators.DataRequired()])
+    product_name = SelectField('Product Name', choices=[('', 'Select'), ('Tomato Seed', 'Tomato Seed'), ('Potato Seed', 'Potato Seed')], default='', validators=[validators.InputRequired()])
+    email = EmailField('Email', [validators.Email(), validators.DataRequired()])
+    reply_date = DateField('Reply Date', format='%Y-%m-%d')
+    comments = TextAreaField('Comments', [validators.Length(min=1, max=500), validators.DataRequired()])
\ No newline at end of file
Index: carts.db.dat
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>�\u0004��\u0000\u0000\u0000\u0000\u0000\u0000\u0000}�(�\u000Btomato seed�}�(�\u0007product��\b__main__��\u0007Product���)��}�(�\u0004name�h\u0001�\u0005price�J���\u0005�\u0005image��\u001E../static/img/tomato seed.jpeg�ub�\bquantity�K\u0006u�\u000Bpotato seed�}�(�\u0007product�h\u0006)��}�(h\th\u000Eh\nM\u000F'h\u000B�\u001D../static/img/potato seed.jpg�ub�\bquantity�K\u0004uu.
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/carts.db.dat b/carts.db.dat
--- a/carts.db.dat	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/carts.db.dat	(date 1707511618660)
@@ -1,2 +1,2 @@
-���       }�(�tomato seed�}�(�product��__main__��Product���)��}�(�name�h�price�J����image��../static/img/tomato seed.jpeg�ub�quantity�Ku�potato seed�}�(�product�h)��}�(h	hh
-M'h�../static/img/potato seed.jpg�ub�quantity�Kuu.
\ No newline at end of file
+���       }�(�tomato seed�}�(�product��__main__��Product���)��}�(�name�h�price�J����image��../static/img/tomato seed.jpeg�ub�quantity�Ku�potato seed�}�(�product�h)��}�(h	hh
+M'h�../static/img/potato seed.jpg�ub�quantity�Kuu.
\ No newline at end of file
Index: templates/base.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html><!-- user's side -->\r\n<head>\r\n    <title>VegeGrove</title>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n  <title>{% block title %}VegeGrove{% endblock %}</title>\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/style.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\">\r\n  <link rel=\"stylesheet\" href=\"https://fonts.googleapis.com/css2?family=Raleway:ital,wght@0,300;0,500;1,300&display=swap\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/cart.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/checkout.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/createReviews.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/product.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/response.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/retrieveReviews.css') }}\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/updateReviews.css') }}\">\r\n   {% block head %}\r\n  {% endblock %}\r\n</head>\r\n<body>\r\n  <nav class=\"navbar navbar-inverse\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"navbar-header\">\r\n        <a class=\"navbar-brand\" href=\"/\">VegeGrove</a>\r\n      </div>\r\n      <ul class=\"nav navbar-nav\">\r\n        <li><a href=\"{{url_for('main.home')}}\">Home</a></li>\r\n        <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Events <span class=\"caret\"></span></a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a href=\"{{url_for('retrieve_events')}}\">Discover Events</a></li>\r\n            <li><a href=\"{{url_for('retrieveUserEvents')}}\">My Events</a></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Review <span class=\"caret\"></span></a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a href=\"{{url_for('create_review')}}\">Create Review</a></li>\r\n            <li><a href=\"{{url_for('retrieve_reviews')}}\">Retrieve Review</a></li>\r\n          </ul>\r\n        </li>\r\n        <li class=\"dropdown\"><a class=\"dropdown-toggle\" data-toggle=\"dropdown\" href=\"#\">Products <span class=\"caret\"></span></a>\r\n          <ul class=\"dropdown-menu\">\r\n            <li><a href=\"{{url_for('store_page')}}\">View Products</a></li>\r\n            <li><a href=\"{{url_for('cart_page')}}\">View Cart</a></li>\r\n          </ul>\r\n        </li>\r\n        <li><a href=\"/donation\">Donation</a></li>\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li>\r\n          <div class=\"user\">\r\n          <a href=\"#\"><span class=\"glyphicon glyphicon-user\" onclick=\"toggleuser()\"></span> </a>\r\n            <div id=\"userApplet\" class=\"user-applet\">\r\n              <h3 style=\"display: inline\">Profile</h3>\r\n                <div class=\"user-item\">\r\n                  <h4><a href=\"{{url_for('main.profile')}}\">Profile</a></h4>\r\n                  <h4>\r\n                    <a href=\"{{url_for('auth.userChangePassword')}}\">Change password </a>\r\n                  </h4>\r\n                  <button class=\"logout\" onclick=\"logout()\"><span class=\"glyphicon glyphicon-log-in\"></span>Logout</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n    <script>\r\n         function logout() {\r\n            // Add any logout logic or redirect here\r\n            window.location.href = \"{{ url_for('auth.logout') }}\";\r\n        }\r\n\r\n        function toggleuser() {\r\n            var userApplet = document.getElementById('userApplet');\r\n            userApplet.style.display = (userApplet.style.display === 'block') ? 'none' : 'block';\r\n        }\r\n    </script>\r\n</div>\r\n  </header>\r\n\r\n\r\n  {% block content %}\r\n\r\n\r\n\r\n  {% endblock %}\r\n</body>\r\n\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base.html b/templates/base.html
--- a/templates/base.html	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/templates/base.html	(date 1707511618597)
@@ -32,7 +32,7 @@
         <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Events <span class="caret"></span></a>
           <ul class="dropdown-menu">
             <li><a href="{{url_for('retrieve_events')}}">Discover Events</a></li>
-            <li><a href="{{url_for('retrieveUserEvents')}}">My Events</a></li>
+            <li ><a href="{{url_for('retrieveUserEvents')}}">My Events</a></li>
           </ul>
         </li>
         <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Review <span class="caret"></span></a>
Index: .idea/workspace.xml
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><?xml version=\"1.0\" encoding=\"UTF-8\"?>\r\n<project version=\"4\">\r\n  <component name=\"AutoImportSettings\">\r\n    <option name=\"autoReloadType\" value=\"SELECTIVE\" />\r\n  </component>\r\n  <component name=\"ChangeListManager\">\r\n    <list default=\"true\" id=\"0032cba9-b607-4fbb-9984-15f68861d9f3\" name=\"Changes\" comment=\"adding new stuff\">\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_1_2024_8_51_pm__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_1_2024_8_51_pm__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_18_pm__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_18_pm__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_23_pm__Changes_.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_23_pm__Changes_.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/.idea/workspace.xml\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/.idea/workspace.xml\" afterDir=\"false\" />\r\n      <change beforePath=\"$PROJECT_DIR$/templates/base3.html\" beforeDir=\"false\" afterPath=\"$PROJECT_DIR$/templates/base3.html\" afterDir=\"false\" />\r\n    </list>\r\n    <option name=\"SHOW_DIALOG\" value=\"false\" />\r\n    <option name=\"HIGHLIGHT_CONFLICTS\" value=\"true\" />\r\n    <option name=\"HIGHLIGHT_NON_ACTIVE_CHANGELIST\" value=\"false\" />\r\n    <option name=\"LAST_RESOLUTION\" value=\"IGNORE\" />\r\n  </component>\r\n  <component name=\"FileTemplateManagerImpl\">\r\n    <option name=\"RECENT_TEMPLATES\">\r\n      <list>\r\n        <option value=\"HTML File\" />\r\n        <option value=\"Python Script\" />\r\n      </list>\r\n    </option>\r\n  </component>\r\n  <component name=\"Git.Settings\">\r\n    <option name=\"RECENT_GIT_ROOT_PATH\" value=\"$PROJECT_DIR$\" />\r\n  </component>\r\n  <component name=\"GitHubPullRequestSearchHistory\">{\r\n  &quot;lastFilter&quot;: {\r\n    &quot;state&quot;: &quot;OPEN&quot;,\r\n    &quot;assignee&quot;: &quot;5h1q1&quot;\r\n  }\r\n}</component>\r\n  <component name=\"GithubPullRequestsUISettings\">\r\n    <option name=\"selectedUrlAndAccountId\">\r\n      <UrlAndAccount>\r\n        <option name=\"accountId\" value=\"c5fceae3-8479-423f-a5d1-aea7c642c450\" />\r\n        <option name=\"url\" value=\"https://github.com/aikyh/aikyh.github.io.git\" />\r\n      </UrlAndAccount>\r\n    </option>\r\n  </component>\r\n  <component name=\"MarkdownSettingsMigration\">\r\n    <option name=\"stateVersion\" value=\"1\" />\r\n  </component>\r\n  <component name=\"ProjectColorInfo\">{\r\n  &quot;associatedIndex&quot;: 7\r\n}</component>\r\n  <component name=\"ProjectId\" id=\"2bcyFsvgmaUVoxYO9x2uiqzjQZu\" />\r\n  <component name=\"ProjectViewState\">\r\n    <option name=\"hideEmptyMiddlePackages\" value=\"true\" />\r\n    <option name=\"showLibraryContents\" value=\"true\" />\r\n  </component>\r\n  <component name=\"PropertiesComponent\">{\r\n  &quot;keyToString&quot;: {\r\n    &quot;DefaultHtmlFileTemplate&quot;: &quot;HTML File&quot;,\r\n    &quot;RunOnceActivity.OpenProjectViewOnStart&quot;: &quot;true&quot;,\r\n    &quot;RunOnceActivity.ShowReadmeOnStart&quot;: &quot;true&quot;,\r\n    &quot;git-widget-placeholder&quot;: &quot;main&quot;\r\n  }\r\n}</component>\r\n  <component name=\"RecentsManager\">\r\n    <key name=\"MoveFile.RECENT_KEYS\">\r\n      <recent name=\"C:\\Users\\leesh\\OneDrive\\Desktop\\PycharmProjects\\appdevgroupproj\\aikyh.github.io\\static\\css\" />\r\n    </key>\r\n  </component>\r\n  <component name=\"SpellCheckerSettings\" RuntimeDictionaries=\"0\" Folders=\"0\" CustomDictionaries=\"0\" DefaultDictionary=\"application-level\" UseSingleDictionary=\"true\" transferred=\"true\" />\r\n  <component name=\"TaskManager\">\r\n    <task active=\"true\" id=\"Default\" summary=\"Default task\">\r\n      <changelist id=\"0032cba9-b607-4fbb-9984-15f68861d9f3\" name=\"Changes\" comment=\"\" />\r\n      <created>1706528560294</created>\r\n      <option name=\"number\" value=\"Default\" />\r\n      <option name=\"presentableId\" value=\"Default\" />\r\n      <updated>1706528560294</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00013\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706595713080</created>\r\n      <option name=\"number\" value=\"00013\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00013\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706595713080</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00014\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706596489889</created>\r\n      <option name=\"number\" value=\"00014\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00014\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706596489889</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00015\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706596665845</created>\r\n      <option name=\"number\" value=\"00015\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00015\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706596665845</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00016\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706596873802</created>\r\n      <option name=\"number\" value=\"00016\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00016\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706596873802</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00017\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706597319710</created>\r\n      <option name=\"number\" value=\"00017\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00017\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706597319710</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00018\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706600149938</created>\r\n      <option name=\"number\" value=\"00018\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00018\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706600149938</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00019\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706600645421</created>\r\n      <option name=\"number\" value=\"00019\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00019\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706600645421</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00020\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706621666408</created>\r\n      <option name=\"number\" value=\"00020\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00020\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706621666408</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00021\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706622695827</created>\r\n      <option name=\"number\" value=\"00021\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00021\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706622695827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00022\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706622792087</created>\r\n      <option name=\"number\" value=\"00022\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00022\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706622792087</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00023\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706671390541</created>\r\n      <option name=\"number\" value=\"00023\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00023\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706671390541</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00024\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706688767787</created>\r\n      <option name=\"number\" value=\"00024\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00024\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706688767787</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00025\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706692677137</created>\r\n      <option name=\"number\" value=\"00025\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00025\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706692677137</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00026\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1706692809632</created>\r\n      <option name=\"number\" value=\"00026\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00026\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1706692809632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00027\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707213752188</created>\r\n      <option name=\"number\" value=\"00027\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00027\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707213752188</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00028\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707214024162</created>\r\n      <option name=\"number\" value=\"00028\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00028\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707214024162</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00029\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707214580827</created>\r\n      <option name=\"number\" value=\"00029\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00029\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707214580827</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00030\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707214878060</created>\r\n      <option name=\"number\" value=\"00030\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00030\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707214878060</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00031\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707215001688</created>\r\n      <option name=\"number\" value=\"00031\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00031\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707215001688</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00032\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707215270580</created>\r\n      <option name=\"number\" value=\"00032\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00032\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707215270580</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00033\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707215348632</created>\r\n      <option name=\"number\" value=\"00033\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00033\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707215348632</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00034\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707215621341</created>\r\n      <option name=\"number\" value=\"00034\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00034\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707215621341</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00035\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707215635131</created>\r\n      <option name=\"number\" value=\"00035\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00035\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707215635131</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00036\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707216175061</created>\r\n      <option name=\"number\" value=\"00036\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00036\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707216175061</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00037\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707217360986</created>\r\n      <option name=\"number\" value=\"00037\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00037\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707217360986</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00038\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707217437389</created>\r\n      <option name=\"number\" value=\"00038\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00038\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707217437389</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00039\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707381160950</created>\r\n      <option name=\"number\" value=\"00039\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00039\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707381160950</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00040\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707381220677</created>\r\n      <option name=\"number\" value=\"00040\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00040\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707381220677</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00041\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707381973755</created>\r\n      <option name=\"number\" value=\"00041\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00041\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707381973755</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00042\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707382984505</created>\r\n      <option name=\"number\" value=\"00042\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00042\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707382984505</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00043\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707384283475</created>\r\n      <option name=\"number\" value=\"00043\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00043\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707384283475</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00044\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707384298302</created>\r\n      <option name=\"number\" value=\"00044\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00044\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707384298302</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00045\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707384445748</created>\r\n      <option name=\"number\" value=\"00045\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00045\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707384445748</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00046\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707385528445</created>\r\n      <option name=\"number\" value=\"00046\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00046\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707385528445</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00047\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707387569778</created>\r\n      <option name=\"number\" value=\"00047\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00047\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707387569778</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00048\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707388692266</created>\r\n      <option name=\"number\" value=\"00048\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00048\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707388692266</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00049\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707389612482</created>\r\n      <option name=\"number\" value=\"00049\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00049\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707389612482</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00050\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707400749791</created>\r\n      <option name=\"number\" value=\"00050\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00050\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707400749792</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00051\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707401077820</created>\r\n      <option name=\"number\" value=\"00051\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00051\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707401077820</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00052\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707403212554</created>\r\n      <option name=\"number\" value=\"00052\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00052\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707403212554</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00053\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707407853560</created>\r\n      <option name=\"number\" value=\"00053\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00053\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707407853562</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00054\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707408622903</created>\r\n      <option name=\"number\" value=\"00054\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00054\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707408622903</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00055\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707408786152</created>\r\n      <option name=\"number\" value=\"00055\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00055\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707408786152</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00056\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707408960940</created>\r\n      <option name=\"number\" value=\"00056\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00056\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707408960940</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00057\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707409534843</created>\r\n      <option name=\"number\" value=\"00057\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00057\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707409534843</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00058\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707409907597</created>\r\n      <option name=\"number\" value=\"00058\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00058\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707409907597</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00059\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707411415967</created>\r\n      <option name=\"number\" value=\"00059\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00059\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707411415967</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00060\" summary=\"idk\">\r\n      <option name=\"closed\" value=\"true\" />\r\n      <created>1707411979724</created>\r\n      <option name=\"number\" value=\"00060\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00060\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707411979724</updated>\r\n    </task>\r\n    <task id=\"LOCAL-00061\" summary=\"adding new stuff\">\r\n      <created>1707473436341</created>\r\n      <option name=\"number\" value=\"00061\" />\r\n      <option name=\"presentableId\" value=\"LOCAL-00061\" />\r\n      <option name=\"project\" value=\"LOCAL\" />\r\n      <updated>1707473436342</updated>\r\n    </task>\r\n    <option name=\"localTasksCounter\" value=\"62\" />\r\n    <servers />\r\n  </component>\r\n  <component name=\"Vcs.Log.Tabs.Properties\">\r\n    <option name=\"TAB_STATES\">\r\n      <map>\r\n        <entry key=\"MAIN\">\r\n          <value>\r\n            <State />\r\n          </value>\r\n        </entry>\r\n      </map>\r\n    </option>\r\n  </component>\r\n  <component name=\"VcsManagerConfiguration\">\r\n    <MESSAGE value=\"idk\" />\r\n    <MESSAGE value=\"adding new stuff\" />\r\n    <option name=\"LAST_COMMIT_MESSAGE\" value=\"adding new stuff\" />\r\n  </component>\r\n  <component name=\"XDebuggerManager\">\r\n    <breakpoint-manager>\r\n      <breakpoints>\r\n        <line-breakpoint enabled=\"true\" suspend=\"THREAD\" type=\"python-line\">\r\n          <url>file://$PROJECT_DIR$/Forms.py</url>\r\n          <option name=\"timeStamp\" value=\"1\" />\r\n        </line-breakpoint>\r\n      </breakpoints>\r\n    </breakpoint-manager>\r\n  </component>\r\n</project>
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/.idea/workspace.xml b/.idea/workspace.xml
--- a/.idea/workspace.xml	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/.idea/workspace.xml	(date 1707512046626)
@@ -6,10 +6,14 @@
   <component name="ChangeListManager">
     <list default="true" id="0032cba9-b607-4fbb-9984-15f68861d9f3" name="Changes" comment="adding new stuff">
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_1_2024_8_51_pm__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_29_1_2024_8_51_pm__Changes_.xml" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_1_2024_3_36_pm__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_30_1_2024_3_36_pm__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_18_pm__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_18_pm__Changes_.xml" afterDir="false" />
       <change beforePath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_23_pm__Changes_.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/shelf/Uncommitted_changes_before_Update_at_8_2_2024_10_23_pm__Changes_.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/.idea/workspace.xml" beforeDir="false" afterPath="$PROJECT_DIR$/.idea/workspace.xml" afterDir="false" />
-      <change beforePath="$PROJECT_DIR$/templates/base3.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base3.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/Forms.py" beforeDir="false" afterPath="$PROJECT_DIR$/Forms.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/__init__.py" beforeDir="false" afterPath="$PROJECT_DIR$/__init__.py" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/carts.db.dat" beforeDir="false" afterPath="$PROJECT_DIR$/carts.db.dat" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/base.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base.html" afterDir="false" />
+      <change beforePath="$PROJECT_DIR$/templates/base2.html" beforeDir="false" afterPath="$PROJECT_DIR$/templates/base2.html" afterDir="false" />
     </list>
     <option name="SHOW_DIALOG" value="false" />
     <option name="HIGHLIGHT_CONFLICTS" value="true" />
Index: templates/base2.html
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+><!DOCTYPE html>\r\n<html><!-- Admin side -->\r\n<head>\r\n    <link rel=\"stylesheet\" type=\"text/css\" href=\"../static/css/cart.css\">\r\n    <title>VegeGrove</title>\r\n    <meta charset=\"utf-8\">\r\n    <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r\n    <link rel=\"stylesheet\" href=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/css/bootstrap.min.css\">\r\n    <script src=\"https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js\"></script>\r\n    <script src=\"https://maxcdn.bootstrapcdn.com/bootstrap/3.4.1/js/bootstrap.min.js\"></script>\r\n  <title>{% block title %}VegeGrove{% endblock %}</title>\r\n  <link rel=\"stylesheet\" href=\"https://cdnjs.cloudflare.com/ajax/libs/normalize/5.0.0/normalize.min.css\">\r\n  <link rel=\"stylesheet\" href=\"{{ url_for('static', filename='/css/styleadmin.css') }}\">\r\n</head>\r\n<body>\r\n  <nav class=\"navbar navbar-inverse\">\r\n    <div class=\"container-fluid\">\r\n      <div class=\"navbar-header\">\r\n        <a class=\"navbar-brand\" href=\"/\">VegeGrove</a>\r\n      </div>\r\n      <ul class=\"nav navbar-nav\">\r\n        <li><a href=\"{{ url_for('admin.homepage')}}\" class=\"active\">Home</a></li>\r\n            <li><a href=\"{{ url_for('admin.create_user') }}\">Create Company</a></li>\r\n            <li><a href=\"/retrieveCompany\">Retrieve Company</a></li>\r\n\r\n      </ul>\r\n      <ul class=\"nav navbar-nav navbar-right\">\r\n        <li>\r\n          <div class=\"user\">\r\n          <a href=\"#\"><span class=\"glyphicon glyphicon-user\" onclick=\"toggleuser()\"></span> </a>\r\n            <div id=\"userApplet\" class=\"user-applet\">\r\n              <h3 style=\"display: inline\">Profile</h3>\r\n                <div class=\"user-item\">\r\n                  <button class=\"logout\" onclick=\"logout()\"><span class=\"glyphicon glyphicon-log-in\"></span>Logout</button>\r\n                </div>\r\n            </div>\r\n            </div>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  </nav>\r\n\r\n    <script>\r\n         function logout() {\r\n            // Add any logout logic or redirect here\r\n            window.location.href = \"{{ url_for('auth.logout') }}\";\r\n        }\r\n\r\n        function toggleuser() {\r\n            var userApplet = document.getElementById('userApplet');\r\n            userApplet.style.display = (userApplet.style.display === 'block') ? 'none' : 'block';\r\n        }\r\n    </script>\r\n</div>\r\n  </header>\r\n\r\n\r\n  {% block content %}\r\n\r\n\r\n\r\n  {% endblock %}\r\n</body>\r\n\r\n</html>\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/templates/base2.html b/templates/base2.html
--- a/templates/base2.html	(revision 815d048bd36449b8600ae790942b3b0a7da2a8c4)
+++ b/templates/base2.html	(date 1707511618616)
@@ -22,7 +22,15 @@
         <li><a href="{{ url_for('admin.homepage')}}" class="active">Home</a></li>
             <li><a href="{{ url_for('admin.create_user') }}">Create Company</a></li>
             <li><a href="/retrieveCompany">Retrieve Company</a></li>
-
+      </ul>
+      <ul>
+        <li class="dropdown"><a class="dropdown-toggle" data-toggle="dropdown" href="#">Review <span class="caret"></span></a>
+          <ul class="dropdown-menu">
+              <li><a href="{{url_for('reply_review')}}">View Reviews</a></li>
+              <li><a href="{{url_for('create_reply')}}">Create Reply</a></li>
+              <li><a href="{{url_for('view_replys')}}">View Replies</a></li>
+          </ul>
+        </li>
       </ul>
       <ul class="nav navbar-nav navbar-right">
         <li>
